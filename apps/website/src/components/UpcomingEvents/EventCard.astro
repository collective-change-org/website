---
import type { Event } from "../../content/loaders/payload/pages/getEvents"
import LexicalRenderer from "../LexicalRenderer.astro"
import { EventMoreInfo } from "./EventMoreInfo"
import { Participate } from "./Participate"
export interface Props extends Event {}

const props = Astro.props

const date = new Date(props.date).toLocaleDateString("de-DE", {
	month: "numeric",
	day: "numeric",
	year: "numeric",
})
---

<div
	class="relative flex flex-col gap-4 overflow-clip rounded-xl bg-white pt-5 text-green-black"
>
	<div class="flex w-full flex-col gap-4 px-5">
		<div class="flex w-full flex-col">
			<h3 class="typestyle-text-m">{date}</h3>
			<h3 class="typestyle-h6">{props.title}</h3>
		</div>
		<div class="line-clamp-2 typestyle-text-m">
			{
				props.description ? (
				<LexicalRenderer {...props.description.root} />
				) : (
					<p>FÃ¼r dieses Event gibt es keinen Beschribungstext</p>
				)
			}
		</div>
		<Participate {...props} client:load />
	</div>
	<EventMoreInfo {...props} client:load>
		<div class="flex flex-col gap-6">
			{
				props.description && (
					<div>
						<LexicalRenderer {...props.description.root} />
					</div>
					<hr class="h-[1px] bg-off-white" />
				)
			}
			<div class="flex">
				<div class="basis-1/2">
					<LexicalRenderer {...props.left.root} />
				</div>
				<div class="basis-1/2">
					<LexicalRenderer {...props.right.root} />
				</div>
			</div>
		</div>
	</EventMoreInfo>
</div>
