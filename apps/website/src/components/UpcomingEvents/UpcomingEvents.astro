---
export const prerender = false // Not needed in 'server' mode

import { z } from "astro/zod"
import EventCard from "./EventCard.astro"
import { CMS_URL } from "astro:env/client"
// import { eventSchema } from "../../content/loaders/payload/pages/getEvents"

const props = Astro.props

// const events = await getCollection("events")
const url = new URL(CMS_URL)
const eventsRequest = await fetch(`${url.origin}/api/events?depth=4&draft=false`).then(
	(res) => res.json(),
)
const { data: events, error } = z.array(z.any()).safeParse(eventsRequest.docs)
---

{
	error ? (
		<div>{error}</div>
	) : (
		<div class="contents">
			<div class="!col-start-1 !col-end-4 overflow-x-clip">
				<div class="inline-flex text-green-lightest" id="upcoming">
					<span class="typestyle-h3 min-w-fit px-2">
						{props.title}
					</span>
					<span class="typestyle-h3 min-w-fit px-4">
						{props.title}
					</span>
					<span class="typestyle-h3 min-w-fit px-4">
						{props.title}
					</span>
					<span class="typestyle-h3 min-w-fit px-4">
						{props.title}
					</span>
					<span class="typestyle-h3 min-w-fit px-4">
						{props.title}
					</span>
					<span class="typestyle-h3 min-w-fit px-4">
						{props.title}
					</span>
					<span class="typestyle-h3 min-w-fit px-4">
						{props.title}
					</span>
					<span class="typestyle-h3 min-w-fit px-4">
						{props.title}
					</span>
				</div>
			</div>
			<div class="flex flex-row flex-wrap justify-center w-full gap-4">
				{events.map((event) => (
					<EventCard {...event} />
				))}
			</div>
		</div>
	)
}

<style>
	#upcoming {
		display: inline-block;
		width: max-content;

		/* show the marquee just outside the paragraph */
		will-change: transform;
		animation: marquee 15s linear infinite;
	}

	#upcoming:hover {
		/* animation-play-state: paused; */
	}
	@media (prefers-reduced-motion: reduce) {
		#upcoming {
			animation-iteration-count: 1;
			animation-duration: 0.01;
			width: auto;
			padding-left: 0;
		}
	}

	@keyframes marquee {
		0% {
			transform: translate(-50%, 0);
		}
		100% {
			transform: translate(0, 0);
		}
	}
</style>
