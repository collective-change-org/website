---
import { getCollection } from "astro:content"
import EventCard from "./EventCard.astro"

const props = Astro.props

const events = await getCollection("events")
---

<script>
	// import { scroll, animate, delay, spring } from "motion"
	// const scrollSpeedMultiplier = 0.5
	// const scrollSpeed = 1000 * scrollSpeedMultiplier

	// const animation = animate(
	// 	"div#upcoming",
	// 	{
	// 		transform: [`translateX(-50%)`, `translateX(0)`],
	// 	},
	// 	{ ease: "linear", repeat: Infinity, duration: 8 },
	// )
	// scroll((_, e) => {
	// 	const speed = (e.y.velocity + scrollSpeed) / scrollSpeed

	// 	const generator = spring({ keyframes: [1, speed] })
	// 	animation.speed = generator.next(10).value
	// })
</script>

<div class="contents">
	<div class="!col-start-1 !col-end-4 overflow-x-clip">
		<div class="inline-flex" id="upcoming">
			<span class="typestyle-h3 min-w-fit text-black">
				{props.title}
			</span>
			<span class="typestyle-h3 min-w-fit text-black">
				{props.title}
			</span>
			<span class="typestyle-h3 min-w-fit text-black">
				{props.title}
			</span>
			<span class="typestyle-h3 min-w-fit text-black">
				{props.title}
			</span>
			<span class="typestyle-h3 min-w-fit text-black">
				{props.title}
			</span>
			<span class="typestyle-h3 min-w-fit text-black">
				{props.title}
			</span>
			<span class="typestyle-h3 min-w-fit text-black">
				{props.title}
			</span>
			<span class="typestyle-h3 min-w-fit text-black">
				{props.title}
			</span>
		</div>
	</div>
	<div>
		{events.map((event) => <EventCard {...event.data} />)}
	</div>
</div>

<style>
	#upcoming {
		display: inline-block;
		width: max-content;

		/* show the marquee just outside the paragraph */
		will-change: transform;
		animation: marquee 15s linear infinite;
	}

	#upcoming:hover {
		/* animation-play-state: paused; */
	}
	@media (prefers-reduced-motion: reduce) {
		#upcoming {
			animation-iteration-count: 1;
			animation-duration: 0.01;
			width: auto;
			padding-left: 0;
		}
	}

	@keyframes marquee {
		0% {
			transform: translate(-50%, 0);
		}
		100% {
			transform: translate(0, 0);
		}
	}
</style>
