---
import { Icon } from "@astrojs/starlight/components"

const pagefindTranslations = {
	placeholder: Astro.locals.t("search.label"),
	...Object.fromEntries(
		Object.entries(Astro.locals.t.all())
			.filter(([key]) => key.startsWith("pagefind."))
			.map(([key, value]) => [key.replace("pagefind.", ""), value]),
	),
}

const dataAttributes: DOMStringMap = {
	"data-translations": JSON.stringify(pagefindTranslations),
}
---

<site-search class={Astro.props.class} {...dataAttributes}>
	<button
		data-open-modal
		disabled
		aria-label={Astro.locals.t("search.label")}
		aria-keyshortcuts="Control+K"
	>
		<Icon name="magnifier" />
		<span class="sl-block" aria-hidden="true"
			>{Astro.locals.t("search.label")}</span
		>
		<kbd class="sl-hidden md:sl-flex" style="display: none;">
			<kbd>{Astro.locals.t("search.ctrlKey")}</kbd><kbd>K</kbd>
		</kbd>
	</button>

	<dialog style="padding:0" aria-label={Astro.locals.t("search.label")}>
		<div class="dialog-frame sl-flex">
			{
				/* TODO: Make the layout of this button flexible to accommodate different word lengths. Currently hard-coded for English: “Cancel” */
			}
			<button data-close-modal class="sl-flex md:sl-hidden">
				{Astro.locals.t("search.cancelLabel")}
			</button>
			{
				import.meta.env.DEV ? (
					<div
						style="margin: auto; text-align: center; white-space: pre-line;"
						dir="ltr">
						<p>{Astro.locals.t("search.devWarning")}</p>
					</div>
				) : (
					<div class="search-container">
						<div id="starlight__search" />
					</div>
				)
			}
		</div>
	</dialog>
</site-search>

{
	/**
	 * This is intentionally inlined to avoid briefly showing an invalid shortcut.
	 * Purposely using the deprecated `navigator.platform` property to detect Apple devices, as the
	 * user agent is spoofed by some browsers when opening the devtools.
	 */
}
<script is:inline>
	;(() => {
		const openBtn = document.querySelector("button[data-open-modal]")
		const shortcut = openBtn?.querySelector("kbd")
		if (!openBtn || !(shortcut instanceof HTMLElement)) return
		const platformKey = shortcut.querySelector("kbd")
		if (platformKey && /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform)) {
			platformKey.textContent = "⌘"
			openBtn.setAttribute("aria-keyshortcuts", "Meta+K")
		}
		shortcut.style.display = ""
	})()
</script>

<script>
	class SiteSearch extends HTMLElement {
		constructor() {
			super()
			const openBtn = this.querySelector<HTMLButtonElement>(
				"button[data-open-modal]",
			)!
			const closeBtn = this.querySelector<HTMLButtonElement>(
				"button[data-close-modal]",
			)!
			const dialog = this.querySelector("dialog")!
			const dialogFrame = this.querySelector(".dialog-frame")!

			/** Close the modal if a user clicks on a link or outside of the modal. */
			const onClick = (event: MouseEvent) => {
				const isLink = "href" in (event.target || {})
				if (
					isLink ||
					(document.body.contains(event.target as Node) &&
						!dialogFrame.contains(event.target as Node))
				) {
					closeModal()
				}
			}

			const openModal = (event?: MouseEvent) => {
				dialog.showModal()
				document.body.toggleAttribute("data-search-modal-open", true)
				this.querySelector("input")?.focus()
				event?.stopPropagation()
				window.addEventListener("click", onClick)
			}

			const closeModal = () => dialog.close()

			openBtn.addEventListener("click", openModal)
			openBtn.disabled = false
			closeBtn.addEventListener("click", closeModal)

			dialog.addEventListener("close", () => {
				document.body.toggleAttribute("data-search-modal-open", false)
				window.removeEventListener("click", onClick)
			})

			// Listen for `ctrl + k` and `cmd + k` keyboard shortcuts.
			window.addEventListener("keydown", (e) => {
				if (
					(e.metaKey === true || e.ctrlKey === true) &&
					e.key === "k"
				) {
					dialog.open ? closeModal() : openModal()
					e.preventDefault()
				}
			})

			let translations = {}
			try {
				translations = JSON.parse(this.dataset.translations || "{}")
			} catch {}

			const shouldStrip = this.dataset.stripTrailingSlash !== undefined
			const stripTrailingSlash = (path: string) =>
				path.replace(/(.)\/(#.*)?$/, "$1$2")
			const formatURL = shouldStrip
				? stripTrailingSlash
				: (path: string) => path

			window.addEventListener("DOMContentLoaded", () => {
				if (import.meta.env.DEV) return
				const onIdle =
					window.requestIdleCallback || ((cb) => setTimeout(cb, 1))
				onIdle(async () => {
					const { PagefindUI } = await import("@pagefind/default-ui")
					new PagefindUI({
						element: "#starlight__search",
						baseUrl: import.meta.env.BASE_URL,
						bundlePath:
							import.meta.env.BASE_URL.replace(/\/$/, "") +
							"/pagefind/",
						showImages: false,
						translations,
						showSubResults: true,
						processResult: (result: {
							url: string
							sub_results: Array<{ url: string }>
						}) => {
							result.url = formatURL(result.url)
							result.sub_results = result.sub_results.map(
								(sub_result) => {
									sub_result.url = formatURL(sub_result.url)
									return sub_result
								},
							)
						},
					})
				})
			})
		}
	}
	customElements.define("site-search", SiteSearch)
</script>

<style>
	site-search {
		display: contents;
	}
	button[data-open-modal] {
		display: flex;
		align-items: center;
		gap: 0.5rem;
		@apply rounded-full border-2 border-solid border-black/10 bg-white text-green-black;
		cursor: pointer;
		height: 2.5rem;
		padding: 0.75rem 1.25rem;
	}

	@media (min-width: 50rem) {
		button[data-open-modal] {
			@apply rounded-full border-2 border-black/10 bg-white text-xl text-green-lighter;
			padding: 0.75rem 1.25rem;
			width: 100%;
			max-width: 22rem;
			border-style: solid;
		}
		button[data-open-modal]:hover {
			@apply border-green-lighter;
		}

		button[data-open-modal] > :last-child {
			margin-inline-start: auto;
		}
	}

	button > kbd {
		border-radius: 0.25rem;
		gap: 0.25em;
		padding-inline: 0.375rem;
		@apply border-2 border-yellow-300 bg-yellow-neon font-sans text-xl font-normal text-green-black;
	}

	dialog {
		margin: 0;
		background-color: #fffbed;
		width: 100%;
		max-width: 100%;
		height: 100%;
		max-height: 100%;
	}
	dialog[open] {
		display: flex;
	}

	dialog::backdrop {
		background-color: rgba(0, 0, 0, 0.5);
		-webkit-backdrop-filter: blur(0.25rem);
		backdrop-filter: blur(0.25rem);
	}

	.dialog-frame {
		position: relative;
		overflow: auto;
		flex-direction: column;
		flex-grow: 1;
		gap: 1rem;
		padding: 1rem;
	}

	button[data-close-modal] {
		position: absolute;
		z-index: 1;
		align-items: center;
		align-self: flex-end;
		height: calc(64px * var(--pagefind-ui-scale));
		padding: 0.25rem;
		border: 0;
		background: transparent;
		cursor: pointer;
		color: var(--sl-color-text-accent);
	}

	#starlight__search {
		--pagefind-ui-primary: #001a15;
		--pagefind-ui-text: #002922;
		--pagefind-ui-font: var(--__sl-font);
		--pagefind-ui-background: #fffefa;
		--pagefind-ui-tag: var(--sl-color-gray-5);
		--sl-search-cancel-space: 5rem;
	}

	:root[data-theme="light"] #starlight__search {
		--pagefind-ui-tag: var(--sl-color-gray-6);
	}

	@media (min-width: 50rem) {
		#starlight__search {
			--sl-search-cancel-space: 0px;
		}

		dialog {
			margin: 4rem auto auto;
			width: 90%;
			max-width: 40rem;
			height: max-content;
			min-height: 15rem;
			max-height: calc(100% - 8rem);
		}

		.dialog-frame {
			padding: 1.5rem;
		}
	}
</style>

<style is:global>
	[data-search-modal-open] {
		overflow: hidden;
	}

	#starlight__search {
		--sl-search-result-spacing: calc(1.25rem * var(--pagefind-ui-scale));
		--sl-search-result-pad-inline-start: calc(
			3.75rem * var(--pagefind-ui-scale)
		);
		--sl-search-result-pad-inline-end: calc(
			1.25rem * var(--pagefind-ui-scale)
		);
		--sl-search-result-pad-block: calc(
			0.9375rem * var(--pagefind-ui-scale)
		);
		--sl-search-result-nested-pad-block: calc(
			0.625rem * var(--pagefind-ui-scale)
		);
		--sl-search-corners: calc(0.3125rem * var(--pagefind-ui-scale));
		--sl-search-page-icon-size: calc(1.875rem * var(--pagefind-ui-scale));
		--sl-search-page-icon-inline-start: calc(
			(
					var(--sl-search-result-pad-inline-start) -
						var(--sl-search-page-icon-size)
				) /
				2
		);
		--sl-search-tree-diagram-size: calc(2.5rem * var(--pagefind-ui-scale));
		--sl-search-tree-diagram-inline-start: calc(
			(
					var(--sl-search-result-pad-inline-start) -
						var(--sl-search-tree-diagram-size)
				) /
				2
		);
	}

	#starlight__search .pagefind-ui__form::before {
		--pagefind-ui-text: var(--sl-color-gray-1);
		opacity: 1;
	}

	#starlight__search .pagefind-ui__search-input {
		@apply bg-off-white text-green-black;
		font-weight: 400;
		width: calc(100% - var(--sl-search-cancel-space));
		padding: 8px 16px;
		border-radius: 999px;
		border: #005244 solid 2px;
	}

	#starlight__search input:focus {
		--pagefind-ui-border: #001a15;
	}

	#starlight__search .pagefind-ui__search-clear {
		inset-inline-end: var(--sl-search-cancel-space);
		width: calc(60px * var(--pagefind-ui-scale));
		padding: 4px 16px;
		background-color: transparent;
		overflow: hidden;
		@apply text-green-black;
		text-decoration: underline;
		cursor: pointer;
	}
	#starlight__search .pagefind-ui__search-clear:focus {
		outline: 1px solid var(--sl-color-accent);
	}
	#starlight__search .pagefind-ui__search-clear::before {
		content: "";
		-webkit-mask: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath d='m13.41 12 6.3-6.29a1 1 0 1 0-1.42-1.42L12 10.59l-6.29-6.3a1 1 0 0 0-1.42 1.42l6.3 6.29-6.3 6.29a1 1 0 0 0 .33 1.64 1 1 0 0 0 1.09-.22l6.29-6.3 6.29 6.3a1 1 0 0 0 1.64-.33 1 1 0 0 0-.22-1.09L13.41 12Z'/%3E%3C/svg%3E")
			center / 50% no-repeat;
		mask: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath d='m13.41 12 6.3-6.29a1 1 0 1 0-1.42-1.42L12 10.59l-6.29-6.3a1 1 0 0 0-1.42 1.42l6.3 6.29-6.3 6.29a1 1 0 0 0 .33 1.64 1 1 0 0 0 1.09-.22l6.29-6.3 6.29 6.3a1 1 0 0 0 1.64-.33 1 1 0 0 0-.22-1.09L13.41 12Z'/%3E%3C/svg%3E")
			center / 50% no-repeat;
		background-color: #fccdff;
		display: block;
		width: 100%;
		height: 100%;
	}

	#starlight__search .pagefind-ui__results > * + * {
		margin-top: var(--sl-search-result-spacing);
	}
	#starlight__search .pagefind-ui__result {
		border: 0;
		padding: 0;
	}

	#starlight__search .pagefind-ui__result-nested {
		position: relative;
		padding: var(--sl-search-result-nested-pad-block)
			var(--sl-search-result-pad-inline-end);
		padding-inline-start: var(--sl-search-result-pad-inline-start);
	}

	#starlight__search
		.pagefind-ui__result-title:not(:where(.pagefind-ui__result-nested *)),
	#starlight__search .pagefind-ui__result-nested {
		position: relative;
		padding: 16px;
		@apply text-green-black no-underline hover:bg-pink-light;
	}

	#starlight__search
		.pagefind-ui__result-title:not(
			:where(.pagefind-ui__result-nested *)
		):hover,
	#starlight__search
		.pagefind-ui__result-title:not(
			:where(.pagefind-ui__result-nested *)
		):focus-within,
	#starlight__search .pagefind-ui__result-nested:hover,
	#starlight__search .pagefind-ui__result-nested:focus-within {
		/* outline: 2px solid #005244; */
	}

	#starlight__search
		.pagefind-ui__result-title:not(
			:where(.pagefind-ui__result-nested *)
		):focus-within,
	#starlight__search .pagefind-ui__result-nested:focus-within {
		background-color: var(--sl-color-accent-low);
	}

	#starlight__search .pagefind-ui__result-thumb,
	#starlight__search .pagefind-ui__result-inner {
		margin-top: 0;
	}

	#starlight__search .pagefind-ui__result-inner > :first-child {
		border-radius: var(--sl-search-corners) var(--sl-search-corners) 0 0;
	}
	#starlight__search .pagefind-ui__result-inner > :last-child {
		border-radius: 0 0 var(--sl-search-corners) var(--sl-search-corners);
	}

	#starlight__search .pagefind-ui__result-inner > .pagefind-ui__result-title {
		padding: var(--sl-search-result-pad-block)
			var(--sl-search-result-pad-inline-end);
		padding-inline-start: var(--sl-search-result-pad-inline-start);
	}
	#starlight__search
		.pagefind-ui__result-inner
		> .pagefind-ui__result-title::before {
		content: "";
		position: absolute;
		inset-block: 0;
		inset-inline-start: var(--sl-search-page-icon-inline-start);
		width: var(--sl-search-page-icon-size);
		@apply text-green-black;
		-webkit-mask: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='currentColor' viewBox='0 0 24 24'%3E%3Cpath d='M9 10h1a1 1 0 1 0 0-2H9a1 1 0 0 0 0 2Zm0 2a1 1 0 0 0 0 2h6a1 1 0 0 0 0-2H9Zm11-3V8l-6-6a1 1 0 0 0-1 0H7a3 3 0 0 0-3 3v14a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V9Zm-6-4 3 3h-2a1 1 0 0 1-1-1V5Zm4 14a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h5v3a3 3 0 0 0 3 3h3v9Zm-3-3H9a1 1 0 0 0 0 2h6a1 1 0 0 0 0-2Z'/%3E%3C/svg%3E")
			center no-repeat;
		mask: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='currentColor' viewBox='0 0 24 24'%3E%3Cpath d='M9 10h1a1 1 0 1 0 0-2H9a1 1 0 0 0 0 2Zm0 2a1 1 0 0 0 0 2h6a1 1 0 0 0 0-2H9Zm11-3V8l-6-6a1 1 0 0 0-1 0H7a3 3 0 0 0-3 3v14a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V9Zm-6-4 3 3h-2a1 1 0 0 1-1-1V5Zm4 14a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h5v3a3 3 0 0 0 3 3h3v9Zm-3-3H9a1 1 0 0 0 0 2h6a1 1 0 0 0 0-2Z'/%3E%3C/svg%3E")
			center no-repeat;
	}

	#starlight__search .pagefind-ui__result-inner {
		align-items: stretch;
		gap: 1px;
	}

	#starlight__search .pagefind-ui__result-link {
		position: unset;
		--pagefind-ui-text: #001a15;
		font-weight: 600;
		@apply text-green-black;
		padding: 0 16px;
		text-decoration: none;
	}

	#starlight__search .pagefind-ui__result-link:hover {
		text-decoration: none;
		font-weight: 600;
	}

	#starlight__search
		.pagefind-ui__result-nested
		.pagefind-ui__result-link::before {
		content: unset;
	}

	#starlight__search .pagefind-ui__result-nested::before {
		content: "";
		position: absolute;
		inset-block: 0;
		inset-inline-start: var(--sl-search-tree-diagram-inline-start);
		width: var(--sl-search-tree-diagram-size);
		@apply text-green-black;
		-webkit-mask: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' stroke='currentColor' stroke-linecap='round' viewBox='0 0 16 1000' preserveAspectRatio='xMinYMin slice'%3E%3Cpath d='M8 0v1000m6-988H8'/%3E%3C/svg%3E")
			0% 0% / 100% no-repeat;
		mask: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' stroke='currentColor' stroke-linecap='round' viewBox='0 0 16 1000' preserveAspectRatio='xMinYMin slice'%3E%3Cpath d='M8 0v1000m6-988H8'/%3E%3C/svg%3E")
			0% 0% / 100% no-repeat;
	}
	#starlight__search .pagefind-ui__result-nested:last-of-type::before {
		-webkit-mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' viewBox='0 0 16 16'%3E%3Cpath d='M8 0v12m6 0H8'/%3E%3C/svg%3E");
		mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' viewBox='0 0 16 16'%3E%3Cpath d='M8 0v12m6 0H8'/%3E%3C/svg%3E");
	}

	/* Flip page and tree icons around the vertical axis when in an RTL layout. */
	[dir="rtl"] .pagefind-ui__result-title::before,
	[dir="rtl"] .pagefind-ui__result-nested::before {
		transform: matrix(-1, 0, 0, 1, 0, 0);
	}

	#starlight__search .pagefind-ui__result-link::after {
		content: "";
		position: absolute;
		inset: 0;
	}

	#starlight__search .pagefind-ui__result-excerpt {
		@apply font-bold text-green-black;
		overflow-wrap: anywhere;
		font-weight: 400;
	}

	#starlight__search mark {
		@apply bg-pink-light text-green-black;
		font-weight: 600;
	}

	#starlight__search .pagefind-ui__filter-value::before {
		border-color: var(--sl-color-text-invert);
	}

	#starlight__search .pagefind-ui__result-tags {
		@apply bg-white;
		margin-top: 0;
		padding: var(--sl-search-result-nested-pad-block)
			var(--sl-search-result-pad-inline-end);
	}

	#starlight__search .pagefind-ui__message {
		@apply text-green-black;
		padding: 8px 16px 8px 16px;
	}

	#starlight__search .pagefind-ui__result-link::before {
		@apply text-green-black;
	}

	#starlight__search ol {
		padding: 0;
		text-decoration: none;
	}

	#starlight__search li {
		padding: 16px;
		border: rgba(0, 0, 0, 0.2s);
		/* @apply bg-off-white */
	}

	#starlight__search li::before {
		@apply text-green-black;
		opacity: 1 !important;
		padding: 4px 16px;
		display: none;
	}
</style>
